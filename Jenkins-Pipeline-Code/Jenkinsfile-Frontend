properties([parameters([string(defaultValue: 'us-east-1', description: 'provide the region to deploy the ECR image', name: 'region', trim: true)])])
pipeline{
    agent any
    environment{
        sonar_home=tool 'sonar-scanner'
        account_id=credentials('AWS_ACCOUNT_ID')
        image_repo=credentials('front-repo')
        region="${params.region}"
        aws_ecr_registry_url="${account_id}.dkr.ecr.${region}.amazonaws.com/"
    }
    stages{
        stage("clean workspace"){
            steps{
                cleanWs()
            }
        }
        stage("checkout"){
            steps{
                git branch: 'main', url: 'https://github.com/venkatesh-reddy679/kubernetes-3tier-project.git'
            }
        }
        stage("source code analisys"){
            steps{
                script{
                    dir('Application-Code/frontend/'){
                        withSonarQubeEnv(credentialsId: 'sonar-frontend-token') {
                            sh '${sonar_home}/bin/sonar-scanner -Dsonar.projectKey=dev-frontend -Dsonar.projectName=dev-frontend -Dsonar.sources=.'
                        }
                    }
                }
            }
        }
        stage("quality gate"){
            steps{
                script{
                    try{
                        timeout(5) {
                            waitForQualityGate abortPipeline: true, credentialsId: 'sonar-frontend-token'
                        }
                    }
                    catch(Exception e){
                        error 'quality-gate status is not received in time'
                    }
                }
            }
        }
        stage("file scan"){
            steps{
                dir('Application-Code/frontend/'){
                    sh 'trivy fs . --format table -o trivy-fs-report.html'
                }
            }
        }
        stage("dependency check"){
            steps{
                dir('Application-Code/frontend/'){
                    dependencyCheck additionalArguments: '--scan ./ --disableNodeAudit --disableYarnAudit', odcInstallation: 'owasp'
                    dependencyCheckPublisher pattern: '**/dependency-check-report.xml'
                }
            }
        }
        stage("image build"){
            steps{
                dir('Application-Code/frontend/'){
                    sh 'docker system prune -a --force'
                    sh 'docker build -t ${image_repo} .'
                }
            }
        }
        stage("image scan"){
            steps{
                sh 'trivy image ${image_repo} --format table -o trivy-image-scan-report.html'
            }
        }
        stage("image push"){
            steps{
                withAWS(credentials: 'venky-IAM', region: "${params.region}") {
                    sh 'aws ecr get-login-password | docker login -u AWS --password-stdin ${aws_ecr_registry_url}'
                    sh 'docker tag ${image_repo} ${aws_ecr_registry_url}${image_repo}:${BUILD_NUMBER}'
                    sh 'docker push ${aws_ecr_registry_url}${image_repo}:${BUILD_NUMBER}'
                }
            }
        }
        stage("update deployment manifest"){
            environment{
                git_username="venkatesh-reddy679"
                git_repo="kubernetes-3tier-project"
                git_token=credentials('git_PAT')
            }
            steps{
                dir('Kubernetes-Manifests-file/Frontend/'){
                    sh '''sed -i "s|${aws_ecr_registry_url}${image_repo}:[0-9]*|${aws_ecr_registry_url}${image_repo}:${BUILD_NUMBER}|g" ./deployment.yaml
                    git config --global user.email "venkatesh.reddy679@gmail.com"
                    git config --global user.name "venkateswara reddy"
                    git add ./deployment.yaml
                    git commit -m "updating the deployment.yaml with the build version ${BUILD_NUMBER}"
                    git push https://${git_token}@github.com/${git_username}/${git_repo}
                    echo "image tag updated successfully"'''
                }
            }
        }
    }
}
